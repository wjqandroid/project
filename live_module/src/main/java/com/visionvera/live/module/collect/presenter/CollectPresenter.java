package com.visionvera.live.module.collect.presenter;import android.content.Context;import com.trello.rxlifecycle2.LifecycleProvider;import com.visionvera.live.base.bean.ResBean;import com.visionvera.live.module.collect.contract.CollectContract;import com.visionvera.live.module.collect.model.CollectModel;import com.visionvera.live.network.helper.ApiException;import com.visionvera.live.network.helper.HttpRxObserver;import java.util.Map;/** * @Desc 收藏和取消收藏的presenter实现类 * * @Author yemh * @Date 2019/4/15 17:35 */public class CollectPresenter implements CollectContract.ICollect.IPresenter {    CollectContract.ICollect.IModel mModel;    CollectContract.ICollect.IView mView;    public CollectPresenter(CollectContract.ICollect.IView mView) {        this.mView = mView;        mModel = new CollectModel();    }    @Override    public void getCollect(Context context, Map<String, String> params, LifecycleProvider provider) {        mModel.collectResult(params, provider, new HttpRxObserver<ResBean>(context, true) {            @Override            protected void onError(ApiException e) {                mView.showError(e.getMessage());            }            @Override            protected void onSuccess(ResBean data) {                mView.showCollectResult(data);            }        });    }    @Override    public void getCancelCollect(Context context, Map<String, String> params, LifecycleProvider provider) {        mModel.cancelCollectResult(params, provider, new HttpRxObserver<ResBean>(context, true) {            @Override            protected void onError(ApiException e) {                mView.showError(e.getMessage());            }            @Override            protected void onSuccess(ResBean data) {                mView.showCancelCollectResult(data);            }        });    }}