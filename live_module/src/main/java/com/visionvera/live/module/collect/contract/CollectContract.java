package com.visionvera.live.module.collect.contract;import android.content.Context;import com.trello.rxlifecycle2.LifecycleProvider;import com.visionvera.live.base.bean.ResBean;import com.visionvera.live.base.mvp.IBaseModel;import com.visionvera.live.base.mvp.IBasePresenter;import com.visionvera.live.base.mvp.IBaseView;import com.visionvera.live.module.home.bean.CourseBean;import java.util.List;import java.util.Map;import io.reactivex.Observer;import okhttp3.RequestBody;/** * @Desc 收藏相关MVP约束类 * * @Author yemh * @Date 2019/4/15 17:30 */public interface CollectContract {    /**     * 收藏和取消收藏     */    interface ICollect {        interface IModel extends IBaseModel {            void collectResult(Map<String, String> params, LifecycleProvider provider, Observer<ResBean> observer);            void cancelCollectResult(Map<String, String> params, LifecycleProvider provider, Observer<ResBean> observer);        }        interface IView extends IBaseView {            void showCollectResult(ResBean bean);            void showCancelCollectResult(ResBean bean);        }        interface IPresenter extends IBasePresenter {            void getCollect(Context context, Map<String, String> params, LifecycleProvider provider);            void getCancelCollect(Context context, Map<String, String> params, LifecycleProvider provider);        }    }    /**     * 收藏列表     */    interface ICollectList {        interface IModel extends IBaseModel {            void collectListResult(RequestBody params, LifecycleProvider provider, Observer<ResBean<List<CourseBean>>> observer);        }        interface IView extends IBaseView {            void showCollectListResult(ResBean<List<CourseBean>> bean);        }        interface IPresenter extends IBasePresenter {            void getCollectList(Context context, RequestBody params, LifecycleProvider provider);        }    }}