package com.visionvera.live.module.home.presenter;import android.content.Context;import com.trello.rxlifecycle2.LifecycleProvider;import com.visionvera.live.base.bean.ResBean;import com.visionvera.live.module.home.bean.AddChatterBean;import com.visionvera.live.module.home.bean.ChatMessageBean;import com.visionvera.live.module.home.bean.GroupChatterBean;import com.visionvera.live.module.home.bean.GroupIdBean;import com.visionvera.live.module.home.contract.Contract;import com.visionvera.live.module.home.model.ImModel;import com.visionvera.live.network.helper.ApiException;import com.visionvera.live.network.helper.HttpRxObserver;import java.util.List;import java.util.Map;import okhttp3.RequestBody;/** * @Desc IM的presenter实现类 * * @Author yemh * @Date 2019/4/15 17:35 */public class ImPresenter implements Contract.IIm.IPresenter {    Contract.IIm.IModel mModel;    Contract.IIm.IView mView;    public ImPresenter(Contract.IIm.IView mView) {        this.mView = mView;        mModel = new ImModel();    }    @Override    public void getGroupByBusinessId(Context context, Map<String, Integer> params, LifecycleProvider provider) {        mModel.getGroupByBusinessIdResult(params, provider, new HttpRxObserver<ResBean<GroupIdBean>>(context, true) {            @Override            protected void onError(ApiException e) {                mView.showError(e.getMessage());            }            @Override            protected void onSuccess(ResBean<GroupIdBean> data) {                mView.showGroupByBusinessIdResult(data);            }        });    }    @Override    public void addChatter(Context context, RequestBody params, LifecycleProvider provider) {        mModel.addChatterResult(params, provider, new HttpRxObserver<ResBean<AddChatterBean>>(context, true) {            @Override            protected void onError(ApiException e) {                mView.showError(e.getMessage());            }            @Override            protected void onSuccess(ResBean<AddChatterBean> data) {                mView.showAddChatterResult(data);            }        });    }    @Override    public void getHistoryMessage(Context context, String url, RequestBody params, LifecycleProvider provider) {        mModel.getHistoryMessageResult(url, params, provider, new HttpRxObserver<ResBean<List<ChatMessageBean>>>(context, true) {            @Override            protected void onError(ApiException e) {                mView.showError(e.getMessage());            }            @Override            protected void onSuccess(ResBean<List<ChatMessageBean>> data) {                mView.showHistoryMessageResult(data);            }        });    }    @Override    public void getGroupChatter(Context context, RequestBody params, LifecycleProvider provider) {        mModel.getGroupChatterResult(params, provider, new HttpRxObserver<ResBean<List<GroupChatterBean>>>(context, true) {            @Override            protected void onError(ApiException e) {                mView.showError(e.getMessage());            }            @Override            protected void onSuccess(ResBean<List<GroupChatterBean>> data) {                mView.showGroupChatterResult(data);            }        });    }}