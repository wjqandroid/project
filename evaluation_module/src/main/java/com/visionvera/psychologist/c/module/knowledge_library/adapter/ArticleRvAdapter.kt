package com.visionvera.psychologist.c.module.knowledge_library.adapterimport android.webkit.WebViewimport android.webkit.WebViewClientimport android.widget.ImageViewimport android.widget.LinearLayoutimport android.widget.TextViewimport com.bumptech.glide.Glideimport com.chad.library.adapter.base.BaseQuickAdapterimport com.chad.library.adapter.base.viewholder.BaseViewHolderimport com.visionvera.psychologist.c.Rimport com.visionvera.psychologist.c.module.knowledge_library.bean.ArticleBeanclass ArticleRvAdapter(data: MutableList<ArticleBean>) : BaseQuickAdapter<ArticleBean, BaseViewHolder>(R.layout.item_artical_detail, data) {    /**     * Implement this method and use the helper to adapt the view to the given item.     *     * @param helper A fully initialized helper.     * @param item   The item that needs to be displayed.     */    override fun convert(helper: BaseViewHolder, item: ArticleBean) {        val tvArticleTitle = helper.getView<TextView>(R.id.tvArticleTitle)        val ivAuthorHead = helper.getView<ImageView>(R.id.ivAuthorHead)        val tvAuthorName = helper.getView<TextView>(R.id.tvAuthorName)        val tvIdentifyStatus = helper.getView<TextView>(R.id.tvIdentifyStatus)        item?.let {            tvArticleTitle.setText("" + it.title)            Glide.with(ivAuthorHead)                    .load(it.authorPhoto)                    .placeholder(R.drawable.default_head)                    .into(ivAuthorHead)            tvAuthorName.setText(it.authorName)            ////作者认证状态：1|已认证，0|未认证            if (it.isAuthentication == 1) {                tvIdentifyStatus.setText("已认证")            } else {                tvIdentifyStatus.setText("未认证")            }        }        val webView = helper.getView<WebView>(R.id.webView)        val ll_item_root = helper.getView<LinearLayout>(R.id.ll_item_root)        ll_item_root.minimumHeight = recyclerView.height        webView.getSettings().setJavaScriptEnabled(true);        webView.setWebViewClient(object : WebViewClient() {            override fun shouldOverrideUrlLoading(view: WebView, url: String): Boolean {                view.loadUrl(url)                return true            }            override fun onPageFinished(view: WebView, url: String) {                super.onPageFinished(view, url)            }        })        webView.loadUrl(item.fileUrl)//        webView.loadUrl("http://mhsp-cdn.51vision.com//upload/articals/1608281242997_978.html")//        webView.loadDataWithBaseURL("", item.content, "text/html", "utf-8", "")    }}