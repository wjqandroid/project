package com.visionvera.psychologist.c.module.knowledge_library.adapterimport android.view.Viewimport android.widget.ImageViewimport android.widget.TextViewimport com.bumptech.glide.Glideimport com.chad.library.adapter.base.BaseMultiItemQuickAdapterimport com.chad.library.adapter.base.viewholder.BaseViewHolderimport com.visionvera.psychologist.c.Rimport com.visionvera.psychologist.c.module.knowledge_library.adapter.KnowledgeCircleListAdapter.MedicalCircleType.Companion.TYPE1import com.visionvera.psychologist.c.module.knowledge_library.bean.MultiArticleItemBeanimport de.hdodenhof.circleimageview.CircleImageViewclass KnowledgeCircleListAdapter(data: MutableList<MultiArticleItemBean>) : BaseMultiItemQuickAdapter<MultiArticleItemBean, BaseViewHolder>(data) {    interface MedicalCircleType {        companion object {            //普通的文字图片样式.图片可有可无            const val TYPE1 = 1        }    }    init {        addItemType(TYPE1, R.layout.article_item_type1)    }    /**     * Implement this method and use the helper to adapt the view to the given item.     *     * @param helper A fully initialized helper.     * @param item   The item that needs to be displayed.     */    override fun convert(helper: BaseViewHolder, item: MultiArticleItemBean) {        when (helper.itemViewType) {            TYPE1 -> {                initType1View(helper, item)            }            else -> {            }        }    }    private fun initType1View(helper: BaseViewHolder, item: MultiArticleItemBean) {        initCommonView(helper, item)    }    /**     * 初始化所有item的通用view部分     */    private fun initCommonView(helper: BaseViewHolder, item: MultiArticleItemBean) {        var ivCoverImage = helper.getView<ImageView>(R.id.ivCoverImage)        var tvTitle = helper.getView<TextView>(R.id.tvTitle)        var tvContent = helper.getView<TextView>(R.id.tvContent)        var ivAuthorHead = helper.getView<CircleImageView>(R.id.ivAuthorHead)        var tvAuthorName = helper.getView<TextView>(R.id.tvAuthorName)        var tvIdentifyStatus = helper.getView<TextView>(R.id.tvIdentifyStatus)        var ivLike = helper.getView<ImageView>(R.id.ivLike)        var tvLikeCount = helper.getView<TextView>(R.id.tvLikeCount)        var ivCollect = helper.getView<ImageView>(R.id.ivCollect)        var tvCollectCount = helper.getView<TextView>(R.id.tvCollectCount)        item?.dataBean?.let {            if (it.coverImageUrls.isNullOrBlank()) {                ivCoverImage.visibility = View.GONE            } else {                ivCoverImage.visibility = View.VISIBLE                var split = it.coverImageUrls!!.split(",")                Glide.with(ivCoverImage)                        .load(split.get(0))                        .placeholder(R.mipmap.logo)                        .into(ivCoverImage)            }            tvTitle.text = it.title?.let { it1 -> translation(it1) }            tvContent.text = it.summary?.let { it1 -> translation(it1) }            Glide.with(ivAuthorHead)                    .load(it.authorPhoto)                    .placeholder(R.mipmap.logo)                    .into(ivAuthorHead)            tvAuthorName.text = it.authorName            if (it.isAuthentication == 1) {                //已认证                tvIdentifyStatus.text = "已认证账号"                tvIdentifyStatus.background = context.getDrawable(R.drawable.bg_gradient_79eab7_51c8b5_r4)            } else {                //未认证                tvIdentifyStatus.text = "未认证账号"                tvIdentifyStatus.background = context.getDrawable(R.drawable.bg_fff1f1f1_r4)            }            if (it.thumbsUpStatus != 0 && it.thumbsUpNumber != 0) {                //已点赞                ivLike.background = context.getDrawable(R.drawable.ic_like)                tvLikeCount.text = it.thumbsUpNumber.toString()            } else {                ivLike.background = context.getDrawable(R.drawable.ic_unlike)                tvLikeCount.text = it.thumbsUpNumber.toString()            }            if (it.collectStatus != 0 && it.collectNumber != 0) {                //已收藏                ivCollect.background = context.getDrawable(R.drawable.ic_article_collect)                tvCollectCount.text = it.collectNumber.toString()            } else {                ivCollect.background = context.getDrawable(R.drawable.ic_article_uncollect)                tvCollectCount.text = it.collectNumber.toString()            }        }    }    private fun translation(content: String): String {        val replace = content.replace("&lt;", "<");        val replace1 = replace.replace("&gt;", ">");        val replace2 = replace1.replace("&amp;", "&");        val replace3 = replace2.replace("&quot;", "\"");        val replace4 = replace3.replace("&nbsp;", "");        val replace5 = replace4.replace("￼", "");        val replace6 = replace5.replace("&reg;", "®");        val replace7 = replace6.replace("&times;", "×");        val replace8 = replace7.replace("&divide;", "÷");        return replace8.replace("&copy;", "©");    }}